{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/koa-booster-cli",
    "result": {"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"c270317f-9d95-5f11-a005-24d654adc79d","title":"koa-booster-cli使用","slug":"/koa-booster-cli"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"koa-booster-cli使用\",\n  \"metaTitle\": \"Koa-booster-cli makes you have a quick learning on koa-booster\",\n  \"metaDescription\": \"kKoa-booster module give you a better experience in developing with the sample thought of Koa: pure, clean, and strong enough to extend whatever you want\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"koa-booster-cli\"), mdx(\"p\", null, \"Koa-booster module give you a better experience in developing with the sample thought of Koa: pure, clean, and strong enough to extend whatever you want.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Usage\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Step 1\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npm i -g koa-booster-cli\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Step 2\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"koa-booster create {projectName}\\n//or you can do it either\\nmkdir {projectName} && cd {projectName}\\nkoa-booster create .\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Step 3 \")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd {projectName} && npm i\\nnpm run start\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Alias: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"koa-booster: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kb\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"create: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"c\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"generate: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"g\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"koa-booster create {projectName}\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"or(RIP Kobe Bryant) \"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kb c {projectName} \\n\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kb generate {moduleName} \\n\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kb g {moduleName} \\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Cli List\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kb create {projectName}\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kb create app1  \\nkb c app1\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kb generate {moduleName} \", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"moduleName include: router, controller, service, utils, config, middlewares\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kb generate controller books\\nkb g service books\\nkb g config books\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Related Doc \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/koa-booster\"\n  }, \"koa-booster\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#koa-booster-cli","title":"koa-booster-cli"}]},"parent":{"relativePath":"koa-booster-cli.md"},"frontmatter":{"metaTitle":"Koa-booster-cli makes you have a quick learning on koa-booster","metaDescription":"kKoa-booster module give you a better experience in developing with the sample thought of Koa: pure, clean, and strong enough to extend whatever you want"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/koa-booster-cli","title":"koa-booster-cli使用"}}},{"node":{"fields":{"slug":"/语法","title":"koa-booster语法"}}},{"node":{"fields":{"slug":"/优雅的实现nodejs","title":"优雅的实现nodejs"}}},{"node":{"fields":{"slug":"/","title":"Index"}}}]}},"pageContext":{"id":"c270317f-9d95-5f11-a005-24d654adc79d"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}