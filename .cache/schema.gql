### Type definitions saved at 2022-03-20T17:11:44.434Z ###

type File implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
}

type Directory implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
}

type Site implements Node @derivedTypes @dontInfer {
  buildTime: Date @dateformat
  siteMetadata: SiteSiteMetadata
  pathPrefix: String
  flags: SiteFlags
  polyfill: Boolean
}

type SiteSiteMetadata @derivedTypes {
  title: String
  description: String
  docsLocation: String
  favicon: String
  logo: SiteSiteMetadataLogo
  headerTitle: String
  githubUrl: String
  helpUrl: String
  tweetText: String
  headerLinks: [SiteSiteMetadataHeaderLinks]
  siteUrl: String
}

type SiteFunction implements Node @dontInfer {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
}

type SitePage implements Node @dontInfer {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  pageContext: JSON
  pluginCreator: SitePlugin @link(by: "id", from: "pluginCreatorId")
}

type SitePlugin implements Node @dontInfer {
  resolve: String
  name: String
  version: String
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  pluginOptions: JSON
  packageJson: JSON
}

type SiteBuildMetadata implements Node @dontInfer {
  buildTime: Date @dateformat
}

type MdxFrontmatter {
  title: String!
  metaTitle: String
  metaDescription: String
}

type MdxHeadingMdx {
  value: String
  depth: Int
}

enum HeadingsMdx {
  h1
  h2
  h3
  h4
  h5
  h6
}

type MdxWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type Mdx implements Node @childOf(mimeTypes: ["text/markdown", "text/x-markdown"], types: ["File"]) @derivedTypes @dontInfer {
  rawBody: String!
  fileAbsolutePath: String!
  frontmatter: MdxFrontmatter
  slug: String
  body: String!
  excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
  headings(depth: HeadingsMdx): [MdxHeadingMdx]
  html: String
  mdxAST: JSON
  tableOfContents(maxDepth: Int): JSON
  timeToRead: Int
  wordCount: MdxWordCount
  fields: MdxFields
}

type SiteSiteMetadataLogo {
  link: String
  image: String
}

type SiteSiteMetadataHeaderLinks {
  text: String
  link: String
}

type SiteFlags {
  DEV_SSR: Boolean
  FAST_DEV: Boolean
  PRESERVE_WEBPACK_CACHE: Boolean
  PRESERVE_FILE_DOWNLOAD_CACHE: Boolean
  PARALLEL_SOURCING: Boolean
  FUNCTIONS: Boolean
}

type MdxFields {
  slug: String
  id: String
  title: String
}